###########
# BUILDER #
###########
# 多阶段构建
# pull official base image
FROM python:2.7.15-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
# RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev

# install MySQL-python dependencies
RUN apk update && apk --no-cache add --virtual build-dependencies \
      build-base \
      py-mysqldb \
      gcc \
      libc-dev \
      libffi-dev \
      mariadb-dev

# lint
RUN pip install --upgrade pip
#RUN pip install flake8
COPY . /usr/src/app
#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:2.7.15-alpine

# create directory for the app user
RUN mkdir -p /home/dblog

# create the app user
RUN addgroup -S dblog && adduser -S dblog -G dblog

# create the appropriate directories
ENV HOME=/home/dblog
ENV APP_HOME=/home/dblog/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R dblog:dblog $APP_HOME

# change to the app user
USER dblog

# run entrypoint.prod.sh
ENTRYPOINT ["/home/dblog/web/entrypoint.prod.sh"]