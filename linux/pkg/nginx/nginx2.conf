#user  nobody;
worker_processes  8;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
  worker_connections  2048;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;

  # the upstream component nginx needs to connect to

  upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8080  fail_timeout=0; # for a web port socket (we'll use this first)
  }


  # configuration of the server
  server {
    # the port your site will be served on
    listen      10005;
    server_name  djangoblog.com;

    #listen 443 ssl;
    # root html/test.com;
    #ssl on;
    #ssl_certificate /etc/nginx/ssl/server.crt;
    #ssl_certificate_key /etc/nginx/ssl/server.key;

    #SSL 实现80端口重定向到443
    #rewrite ^ https://$server_name$request_uri? permanent;
    #rewrite ^(.*) http://$server_name$1 permanent;

    #######   nginx上启用https   #######
    #ssl on;
    #ssl_certificate      /home/python/git/dblog/ssl_certs/cert.pem;#证书路径
    #ssl_certificate_key /home/python/git/dblog/ssl_certs/cert.key;#key路径

    #ssl_session_cache    shared:SSL:1m; #s储存SSL会话的缓存类型和大小
    #ssl_session_timeout  5m; #会话过期时间

    #rewrite  ^/(.*)$ https://djangoblog.com/$1 permanent;
    ######   nginx上启用https   #######


    access_log          /home/python/log/dblog_ng;
    error_log           /home/python/log/dblog_ngerr;

    proxy_connect_timeout    600;
    proxy_read_timeout       600;
    proxy_send_timeout       600;

    # max upload size
    client_max_body_size 50M;


    location ^~ /genericpdf/ {
      # your own static file
      root /home/python/;
      if ($query_string) {
        expires max;
      }
      #expires 30d;
      #break;
    }


    location ^~ /static/ {
      # your own static file
      root /home/python/git/dblog/;
      if ($query_string) {
        expires max;
      }
      #expires 30d;
      #break;
    }

    location /media/ {
      root /home/python/git/dblog/;
      expires 30d;
      break;
    }

    # Django media
    #location /media  {
    #    alias /path/to/your/mysite/media;  # your Django project's media files - amend as required
    #}

    #location /static {
    #    alias /home/python/git/dblog/static/; # your Django project's static files - amend as required
    #}

    # Finally, send all non-media requests to the Django server.
    location / {
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Scheme $scheme;
      proxy_pass http://django;
    }


    #-- Error page setting ---------------------------
    error_page          404              /404.html;
    error_page          500 502 503 504  /50x.html;
    location = /50x.html {
      root            /home/python/git/dblog/templates/errpage;
    }
    location = /404.html {
      root            /home/python/git/dblog/templates/errpage;
    }
  }

}